# Default values for locust.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: hansehe/locust
  pullPolicy: Always

imagePullSecrets: []
appVersionOverride: ""
nameOverride: ""
fullnameOverride: ""
environmentVariables: {}
locustFile: "locustfile.py"

master:
  replicaCount: 1
  environmentVariables: {}
  extraArgs: []
    # - "-u"
    # - "1"
    # - "-r"
    # - "1"
    # - "--web-auth"
    # - "admin:admin"
    # - "--web-host=0.0.0.0"
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 1
    targetCPUUtilizationPercentage: 50
  volumeMounts: []
  ## volumeMounts for the master container
  #  - name: locust-file
  #   mountPath: /locust
  volumes: []
  ## volumes for the master pod.
  #  - name: locust-file
  #    configMap:
  #      name: locust-file

worker:
  replicaCount: 1
  environmentVariables: {}
  extraArgs: []
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 1
    targetCPUUtilizationPercentage: 50
  volumeMounts: []
  ## volumeMounts to the master container
  #  - name: locust-file
  #   mountPath: /locust
  volumes: []
  ## volumes for the master pod.
  #  - name: locust-file
  #    configMap:
  #      name: locust-file

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  annotations:
    prometheus.io/probe: "true"
    prometheus.io/probe-path: "/"

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
  hosts: []
    # - host: locust.localhost
    #   paths:
    #     - /
  tls: []
    # - secretName: locust-tls-secret
    #   hosts:
    #     - locust.localhost

nodeSelector: {}

tolerations: []

affinity: {}
